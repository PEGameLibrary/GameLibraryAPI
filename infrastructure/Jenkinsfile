pipeline {
    agent any

    tools {
        jdk 'jdk21'
    }

    environment {
        DOCKER_USERNAME = 'williamlazar2002'
        DOCKER_PASSWORD = credentials('docker_password')
        GITHUB_TOKEN = credentials('github_token')
    }

    stages {

        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Tag & Build Docker Image') {
            steps {
                script {
                    sh 'git fetch --tags'

                    env.MAJOR_VERSION = sh(script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 1', returnStdout: true).trim()
                    env.MINOR_VERSION = sh(script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 2', returnStdout: true).trim()
                    env.PATCH_VERSION = sh(script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 3', returnStdout: true).trim()
                    env.IMAGE_TAG = "${env.MAJOR_VERSION}.$((env.MINOR_VERSION.toInteger() + 1)).${env.PATCH_VERSION}"
                }

                sh "docker build -t $DOCKER_USERNAME/hello-img:$IMAGE_TAG -f Dockerfile ."
            }
        }

        stage('Push Docker Image & Git Tag') {
            steps {
                withCredentials([
                    string(credentialsId: 'github_token', variable: 'GITHUB_TOKEN')
                ]) {
                    sh '''
                        echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin
                        docker push $DOCKER_USERNAME/hello-img:$IMAGE_TAG
                        git config user.email "ci@jenkins.local"
                        git config user.name "Jenkins CI"
                        git tag $IMAGE_TAG
                        git push https://$GITHUB_TOKEN@github.com/PEGameLibrary/GameLibraryAPI.git $IMAGE_TAG
                    '''
                }
            }
        }

        stage('Deploy Docker Compose') {
            steps {
                sh "IMAGE_TAG=$IMAGE_TAG docker compose up -d hello mongo"
            }
        }

        stage('Run Integration Tests') {
            steps {
                sh './gradlew testIT'
            }
        }
    }
}
